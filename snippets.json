{
    "Database model": {
        "prefix": "d",
        "body": [
            "import { Model, DataType, Table, Column } from 'sequelize-typescript'",
            "",
            "@Table({})",
            "export default class ${TM_FILENAME_BASE} extends Model<${TM_FILENAME_BASE}> {",
            "    @Column({",
            "        allowNull: false,",
            "        type: DataType.STRING",
            "    })",
            "    email: string",
            "}",
            ""
        ],
        "description": "Database model"
    },
    "Mutation / Query": {
        "prefix": "q",
        "body": [
            "import { } from '../../../../database/database'",
            "",
            "import middlewares from '../../../../middlewares'",
            "",
            "import utils from '../../../../utils'",
            "",
            "import { IContext } from '../../types'",
            "",
            "interface IArgs {",
            "    ",
            "}",
            "",
            "export default async (_, {}: IArgs, context: IContext) => {",
            "    middlewares.roleAuthorization(context, '${1}')",
            "}",
            ""
        ],
        "description": "Mutation / Query"
    },
    "Route": {
        "prefix": "r",
        "body": [
            "import { Request, Response, NextFunction } from 'express'",
            "",
            "import { Connection } from '../../../database/database'",
            "",
            "import utils from '../../../utils'",
            "",
            "interface IBody {",
            "   ",
            "}",
            "",
            "export default {",
            "    default: async (req: Request, res: Response, next: NextFunction) => {",
            "        try {",
            "            await Connection.transaction(async transaction => {",
            "                const {  }: IBody = req.body",
            "            })",
            "        } catch (error) {",
            "            next(error)",
            "        }",
            "    },",
            "    validation: () => []",
            "}",
            ""
        ],
        "description": "Route"
    },
    "Functional Component": {
        "prefix": "sss",
        "body": [
            "import React from 'react'",
            "import styled from 'styled-components/macro'",
            "",
            "import Dashboard from './styled/Dashboard'",
            "",
            "const ${TM_FILENAME_BASE}Container = styled.div``",
            "",
            "const ${TM_FILENAME_BASE}: React.FC = () => {",
            "    return <${TM_FILENAME_BASE}Container></${TM_FILENAME_BASE}Container>",
            "}",
            "",
            "export default ${TM_FILENAME_BASE}",
            ""
        ],
        "description": "Functional Component"
    },
    "Styled Component": {
        "prefix": "ss",
        "body": [
            "import styled from 'styled-components/macro'",
            "",
            "export default styled.${1}`",
            "    ${2}",
            "`",
            ""
        ],
        "description": "Styled Component"
    },
    "useState": {
        "prefix": "ee",
        "body": ["const [${1}, se${2}t${1}] = useState()"],
        "description": "useState"
    },
    "useEffect": {
        "prefix": "e",
        "body": ["useEffect(() => {", "    ", "}, [])"],
        "description": "useEffect"
    }
}
