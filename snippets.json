{
    "Auto Imports React": {
        "prefix": "aa",
        "body": [
            "const exports: any = {}",
            "",
            "const req = require.context('./', false, /^\\.\\/(?!index).*\\.${1|ts,tsx|}$/)",
            "",
            "req.keys().forEach(fileName => {",
            "    const exportName = fileName.replace('./', '').replace('.${1|ts,tsx|}', '')",
            "    exports[exportName] = req(fileName).default",
            "})",
            "",
            "export default exports",
            ""
        ],
        "description": "Auto Imports React"
    },
    "Auto Imports Node.js": {
        "prefix": "a",
        "body": [
            "import fs from 'fs'",
            "import path from 'path'",
            "",
            "fs.readdirSync(__dirname)",
            "    .filter(file => file !== 'index.js')",
            "    .forEach(",
            "        file => (module.exports[file.replace('.js', '')] = require(path.resolve(__dirname, file)))",
            "    )",
            ""
        ],
        "description": "Auto Imports Node.js"
    },
    "Main Component": {
        "prefix": "sss",
        "body": [
            "import React from 'react'",
            "import styled from 'styled-components'",
            "",
            "import Dashboard from './styled/Dashboard'",
            "",
            "const ${TM_FILENAME_BASE}Container = styled.${1}`",
            "  ${2}",
            "`",
            "",
            "const ${TM_FILENAME_BASE}: React.FC = () => {",
            "    return <${TM_FILENAME_BASE}Container></${TM_FILENAME_BASE}Container>",
            "}",
            "",
            "export default ${TM_FILENAME_BASE}",
            ""
        ],
        "description": "Main Component"
    },
    "Styled Component": {
        "prefix": "s",
        "body": [
            "import styled from 'styled-components'",
            "",
            "export default styled.${2}`",
            "${3}",
            "`"
        ],
        "description": "Styled Component"
    },
    "Styled View": {
        "prefix": "se",
        "body": ["", "const ${1} = styled.View`", "${3}", "`"],
        "description": "Styled View"
    },
    "Styled Text": {
        "prefix": "es",
        "body": ["", "const ${1} = styled.Text`", "${3}", "`"],
        "description": "Styled Text"
    },
    "Hook useState": {
        "prefix": "dd",
        "body": ["const [${1},${2}set${1}] = useState()"],
        "description": "Hook useState"
    },
    "Hook useEffect": {
        "prefix": "d",
        "body": ["useEffect(() => {", "${1}", "}, [])"],
        "description": "Hook useState"
    },
    "Higher Order Component": {
        "prefix": "ccc",
        "body": [
            "import React from 'react'",
            "import { useDispatch, useSelector } from 'react-redux'",
            "",
            "export default Component => {",
            "    return props => {",
            "        const dispatch = useDispatch()",
            "        const { ${1} } = useSelector(state => state.${3})",
            "        const ${2} = payload => dispatch({ type: '${2}', payload })",
            "        const features = {",
            "            ${1},",
            "            ${2}",
            "        }",
            "        return <Component {...props} {...features} />",
            "    }",
            "}",
            ""
        ],
        "description": "Higher Order Component"
    },
    "Import Higher Order Component": {
        "prefix": "c",
        "body": ["import { compose } from 'redux'", "import {${1}} from '@hoc'"],
        "description": "Import Higher Order Component"
    },
    "Express Route": {
        "prefix": "r",
        "body": [
            "import { check } from 'express-validator'",
            "",
            "import {} from '@database'",
            "",
            "import { ApiError } from '@utils'",
            "",
            "export default async (req, res, next) => {",
            "    try {",
            "        const {${1}} = req.body",
            "    } catch (error) {",
            "        next(error)",
            "    }",
            "}",
            "",
            "export const validation = () => []",
            ""
        ],
        "description": "Express Route"
    },
    "Sequelize Model": {
        "prefix": "ss",
        "body": [
            "import { Model, DataTypes } from 'sequelize'",
            "import bcrypt from 'bcryptjs'",
            "",
            "const { STRING, TEXT, BOOLEAN } = DataTypes",
            "",
            "export default sequelize => {",
            "    class ${TM_FILENAME_BASE} extends Model {}",
            "    ${TM_FILENAME_BASE}.init(",
            "        {",
            "            value: {",
            "                type: STRING,",
            "                allowNull: false",
            "            },",
            "        },",
            "        {",
            "            sequelize,",
            "            modelName: '${2}${TM_FILENAME_BASE}',",
            "            hooks: {",
            "                beforeCreate: ${2}${TM_FILENAME_BASE} => {",
            "                    ${2}${TM_FILENAME_BASE}.password = bcrypt.hashSync(${2}${TM_FILENAME_BASE}.password, 11)",
            "                }",
            "            }",
            "        }",
            "    )",
            "    return ${TM_FILENAME_BASE}",
            "}",
            ""
        ],
        "description": "Sequelize Model"
    }
}
